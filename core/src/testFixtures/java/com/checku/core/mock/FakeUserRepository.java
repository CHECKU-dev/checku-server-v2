package com.checku.core.mock;

import com.checku.core.user.domain.User;
import com.checku.core.user.service.port.UserRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

public class FakeUserRepository implements UserRepository {

    private Long autoGeneratedId = 0L;
    private final List<User> users = new ArrayList<>();

    @Override
    public User save(final User user) {
        if (isNew(user)) {
            return create(user);
        } else {
            return update(user);
        }
    }

    @Override
    public Optional<User> findById(final Long id) {
        return users.stream()
                .filter(user -> Objects.equals(user.getId(), id))
                .findFirst();
    }

    private boolean isNew(final User user) {
        return user.getId() == null;
    }

    private User create(final User user) {
        User newUser = User.builder()
                .id(++autoGeneratedId)
                .pushToken(user.getPushToken())
                .createdAt(user.getCreatedAt())
                .updatedAt(user.getUpdatedAt())
                .build();
        users.add(newUser);
        return newUser;
    }

    private User update(final User user) {
        users.removeIf(item -> Objects.equals(item.getId(), user.getId()));
        users.add(user);
        return user;
    }
}
